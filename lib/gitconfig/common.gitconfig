[color]
diff = auto
status = auto
branch = auto
ui = auto
interactive = auto

[column]
ui = auto

[branch]
sort = -committerdate

[tag]
sort = version:refname

[pull]
rebase = false

[push]
default = simple
autoSetupRemote = true

[core]
autocrlf = input
editor = vim

[rebase]
autoSquash = true
autoStash = true
updateRefs = true

[rerere]
enabled = true
autoupdate = true

[init]
defaultBranch = main

[diff]
algorithm = histogram
colorMoved = plain
mnemonicPrefix = true
renamed = true

[difftool]
prompt = false

[merge]
conflictstyle = zdiff3

[fetch]
prune = true
pruneTags = true
all = true

[help]
autocorrect = prompt

[commit]
verbose = true

[filter "media"]
required = true
clean = git media clean %f
smudge = git media smudge %f

[filter "utf8bom"]
clean = utf8bomcat
smudge = utf8bomcat

[filter "hawser"]
clean = git hawser clean %f
smudge = git hawser smudge %f
required = true

[filter "lfs"]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
required = true

[merge "npm-merge-driver"]
name = automatically merge npm lockfiles
driver = npx npm-merge-driver merge %A %O %B %P

[alias]
s = status
a = !git add . && git status
au = !git add -u . && git status
aa = !git add . && git add -u . && git status
ap = add -p
c = commit
cm = commit -m
ca = commit --amend # careful
ac = !git add . && git commit
acm = !git add . && git commit -m
l = log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
ll = log --stat --abbrev-commit
d = diff 
dh = diff head
dl = diff head^1 head
dc = diff --cached 
dt = difftool --dir-diff
master = checkout master
shove = push --follow-tags
backone = reset --soft HEAD^
nb = checkout -b
pr = pull --rebase
nevermind = !git checkout -f && git clean -df
ahem = !git add -A && git commit --amend --no-edit --no-verify && git push --force
alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
co = checkout
slt = !git log --date=short --format='%an %Cgreen%ad %Creset%s %b' $(git describe --tags --abbrev=0)..HEAD
dslt = !git log --stat --abbrev-commit -p $(git describe --tags --abbrev=0)..HEAD
zip = archive HEAD --format zip -o
ia = merge-base --is-ancestor
ds = describe --tags --always
pn = push -u origin
addfork = "!f(){ echo $(git remote get-url origin) $1 | sed -Ee 's,github.com([/:])[^/]+(.*) (.*),github.com\\1\\3\\2,' | xargs git remote add $1; git fetch $1; }; f"
inplay = "!git branch -vv --no-merged=main --sort=-committerdate --format='%(align:20)%(color:green)%(committerdate:relative)%(color:reset)%(end)%(align:'$(($(tput cols) - 30))')%(color:yellow)%(refname:short)%(color:reset) %(if)%(upstream)%(then)â†’ %(upstream:remotename) %(upstream:track)%(else)%(color:dim)local%(end)%(color:reset)%(end) %(align:20,right)%(color:white)%(authorname)%(color:reset)%(end)'"
nohooks = config --local core.hookspath ~/.dotfiles/lib/disabled-git-hooks
rrbi = "!f(){ git checkout $1 && git pull && git checkout - && git rebase -i $1; }; f"
upl = "!f(){ git checkout --ours package-lock.json && npm install && git add package-lock.json; }; f"
rs = restore --staged
wash = clean -dfX -e '!.tool-versions' -e '!.envrc' -e '!.env' -e '!.idea' -e '!.vscode'
wipa = "!f(){ git add -A && git commit --no-verify -m \"WIP [NO-CI]: $*\"; }; f"
wip = "!f(){ git commit --no-verify -m \"WIP [NO-CI]: $*\"; }; f"
dor = diff @{upstream}
crypt-users = "! git log --format=full .git-crypt/keys/*/*/*.gpg | grep -E '^            .+' | sed 's/ *$//g' | awk '{gsub(/^[ \t]+/,\"\"); print $0 }'"
