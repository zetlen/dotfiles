# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$nats$directory$vcsh$fossil_branch$fossil_metrics$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$gleam$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$odin$opa$perl$php$pulumi$purescript$python$quarto$raku$rlang$red$ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
format = "$all"
right_format = ""
continuation_prompt = "[∙](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true
follow_symlinks = true

[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'
symbol = "AWS "
style = "bold yellow"
disabled = false
expiration_symbol = "X"
force_display = false

[character]
success_symbol = "[>](bold green)"
error_symbol = "[x](bold red)"
vimcmd_symbol = "[<](bold green)"
disabled = false

[cmd_duration]
min_time = 2000
format = '\[[took $duration]($style)\]'
style = "yellow bold"
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "container"
disabled = false

[docker_context]
disabled = true

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'
symbol = "GCP"
disabled = false

[gcloud.region_aliases]

[gcloud.project_aliases]

[git_branch]
format = '\[[$symbol$branch]($style)\]'
symbol = "on "

[git_commit]
format = '[\($hash$tag\)]($style) '

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = false
ignore_submodules = false

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "⇡"
behind = "⇣"
up_to_date = ""
diverged = "⇕"
conflicted = "="
deleted = "✘"
renamed = "»"
modified = "!"
staged = "+"
untracked = "?"
typechanged = ""
ignore_submodules = false
disabled = false

[golang]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "go "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
    "go.mod",
    "go.sum",
    "go.work",
    "glide.yaml",
    "Gopkg.yml",
    "Gopkg.lock",
    ".go-version",
]
detect_folders = ["Godeps"]
[helm]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "helm "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = [
    "helmfile.yaml",
    "Chart.yaml",
]
detect_folders = []

[hostname]
ssh_only = true
ssh_symbol = "ssh to "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = false

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$number bg]($style) "
symbol = ""
style = "bold blue"
disabled = false

[kotlin]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "kotlin "
style = "bold blue"

[line_break]
disabled = false


[nodejs]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "node "
style = "bold green"
disabled = false
not_capable_style = "bold red"
detect_extensions = [
    "js",
    "mjs",
    "cjs",
    "ts",
    "mts",
    "cts",
]
detect_files = [
    "package.json",
    ".node-version",
    ".nvmrc",
]
detect_folders = ["node_modules"]

[os]
disabled = true

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'
symbol = "py "

[ruby]
format = '\[[$symbol($version)]($style)\]'
symbol = "ruby "
disabled = false

[rust]
format = '\[[$symbol($version)]($style)\]'
symbol = "rust "

[terraform]
format = '\[[$symbol$workspace]($style)\]'
symbol = "tf "

[username]
format = '\[[$user]($style)\]'
