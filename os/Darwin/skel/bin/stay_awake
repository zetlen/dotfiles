#!/bin/bash
#
# prevent laptop from sleeping when lid is closed

function display_time {
    local T="$1"

    if (($T <= 0)); then
        printf "0 seconds" && return
    fi

    local D="$((T / 60 / 60 / 24))"
    local H="$((T / 60 / 60 % 24))"
    local M="$((T / 60 % 60))"
    local S="$((T % 60))"

    (($D > 0)) && printf ' %d days' $D
    (($H > 0)) && printf ' %d hours' $H
    (($M > 0)) && printf ' %d minutes' $M
    (($S > 0)) && printf ' %d seconds' $S
}

#***** set some defaults *****
BATTERY_SLEEP=5  # in minutes
DEF_WAKE_LEN=300 # in seconds

#***** determine timeout value *****
timeout_len=${1:-$DEF_WAKE_LEN}

prevent_sleep() {
    echo
    echo -n "Preventing sleep for$(display_time $timeout_len). Press <enter> or Ctrl-C to stop preventing sleep."

    sudo pmset -b disablesleep 1
    sudo pmset -b sleep 0
}

enable_sleep() {
    # $1: <enter> = 0, timeout = 1, Ctrl-C = undef

    #----- insert a newline for timeout or Ctrl-C -----
    if [[ ${1:-1} -eq 1 ]]; then echo; fi
    echo "Restoring previous battery sleep timeout of $BATTERY_SLEEP minutes."

    sudo pmset -b disablesleep 0
    sudo pmset -b sleep $BATTERY_SLEEP
    exit
}

#***** prevent it from sleeping *****
prevent_sleep

#***** trap Ctrl-C *****
trap enable_sleep INT

#***** wait for an enter *****
read -t $timeout_len
rc=$?

#***** re-enable normal sleep *****
enable_sleep $rc
